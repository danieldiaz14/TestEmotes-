[{"/home/daniel/Repos/TestEmotes-/src/index.js":"1","/home/daniel/Repos/TestEmotes-/src/components/App.js":"2","/home/daniel/Repos/TestEmotes-/src/components/Navigation/index.js":"3","/home/daniel/Repos/TestEmotes-/src/components/Navigation/Navigation.js":"4","/home/daniel/Repos/TestEmotes-/src/components/Navigation/NavItems.js":"5","/home/daniel/Repos/TestEmotes-/src/components/Jumbotron/index.js":"6","/home/daniel/Repos/TestEmotes-/src/components/Jumbotron/Jumbotron.js":"7","/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/index.js":"8","/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/ImageUploader.js":"9","/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/ImageCard/index.js":"10"},{"size":157,"mtime":1611196803091,"results":"11","hashOfConfig":"12"},{"size":522,"mtime":1611198489329,"results":"13","hashOfConfig":"12"},{"size":53,"mtime":1611196803061,"results":"14","hashOfConfig":"12"},{"size":550,"mtime":1611198273663,"results":"15","hashOfConfig":"12"},{"size":407,"mtime":1611196803084,"results":"16","hashOfConfig":"12"},{"size":64,"mtime":1611197824983,"results":"17","hashOfConfig":"12"},{"size":337,"mtime":1611197824993,"results":"18","hashOfConfig":"12"},{"size":75,"mtime":1611200518723,"results":"19","hashOfConfig":"12"},{"size":1588,"mtime":1611201317485,"results":"20","hashOfConfig":"12"},{"size":855,"mtime":1611201157964,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11k2ygr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/daniel/Repos/TestEmotes-/src/index.js",[],["47","48"],"/home/daniel/Repos/TestEmotes-/src/components/App.js",["49"],"import React, { useState } from \"react\";\n\nimport ImageUploader from './Imageuploader';\nimport JumboTron from \"./Jumbotron\";\nimport Nav from \"./Navigation\";\n\nconst App = () => {\n  return (\n    <div className=\"container-md\">\n      <Nav />\n      <JumboTron\n        header=\"Content Creator Emote Tester!\"\n        lead=\"Upload an image to see what it would look like on popular content creator websites like Twitch, Discord, Youtube.\"\n      >\n        <ImageUploader/>\n      </JumboTron>\n    </div>\n  );\n};\n\nexport default App;\n","/home/daniel/Repos/TestEmotes-/src/components/Navigation/index.js",[],"/home/daniel/Repos/TestEmotes-/src/components/Navigation/Navigation.js",["50"],"import React from \"react\";\nimport RenderNavItems from \"./NavItems\";\n\nconst navLocations = [\"Home\", \"About\"];\n\nconst Navigation = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Emote Tester\n        </a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <RenderNavItems navTexts={navLocations} />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","/home/daniel/Repos/TestEmotes-/src/components/Navigation/NavItems.js",["51"],"import React from \"react\";\n\nconst renderNavItems = ({ navTexts }) => {\n  const navItems = navTexts.map((navItem) => {\n    return (\n      <li key={navItem} className=\"nav-item\">\n        <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\n          {navItem}\n        </a>\n      </li>\n    );\n  });\n\n  return <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">{navItems}</ul>;\n};\n\nexport default renderNavItems;\n","/home/daniel/Repos/TestEmotes-/src/components/Jumbotron/index.js",[],"/home/daniel/Repos/TestEmotes-/src/components/Jumbotron/Jumbotron.js",[],"/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/index.js",[],"/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/ImageUploader.js",[],"/home/daniel/Repos/TestEmotes-/src/components/Imageuploader/ImageCard/index.js",["52","53"],"import React, { useState, useRef } from 'react';\n\nconst ImageCard = (props) => {\n    const { src, details } = props;\n    const { company, size, type } = details;\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"container-fluid\" style={{height: '48px'}}>\n                    <img\n                        style={{\n                            height: `${size}px`,\n                            width: `${size}px`\n                        }}\n                        alt={company}\n                        src={src}\n                    />\n                </div>\n                <hr/>\n                <h5 className=\"card-title\">{company}</h5>\n                <p className=\"card-text\">How this {type} will look with {size}px</p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ImageCard;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":10,"column":9,"nodeType":"64","endLine":10,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":7,"column":9,"nodeType":"64","endLine":7,"endColumn":62},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"65","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]